<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Tony Zorman · Blog</title>
    <link href="https://tony-zorman.com/atom-maths.xml" rel="self" />
    <link href="https://tony-zorman.com" />
    <id>https://tony-zorman.com/atom-maths.xml</id>
    <author>
        <name>Tony Zorman</name>
        
        <email>mail@tony-zorman.com</email>
        
    </author>
    <updated>2024-05-11T00:00:00Z</updated>
    <entry>
    <title>Leveraging LaTeX in Anki</title>
    <link href="https://tony-zorman.com/posts/anki-latex.html" />
    <id>https://tony-zorman.com/posts/anki-latex.html</id>
    <published>2024-05-11T00:00:00Z</published>
    <updated>2024-05-11T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
    <p class="header">
      
        Posted on 2024-05-11
      
      
        &thinsp;·&thinsp; last modified: 2024-05-15
      
      
        &thinsp;·&thinsp; <span title="1016 words">5 min read</span> &thinsp;·&nbsp;
      
      
        <a title="All pages tagged 'anki'." href="/tags/anki.html" rel="tag">anki</a>, <a title="All pages tagged 'emacs'." href="/tags/emacs.html" rel="tag">emacs</a>, <a title="All pages tagged 'maths'." href="/tags/maths.html" rel="tag">maths</a>
      
    </p>
    <section>
      <!-- A table of contents inline in the text, in case the screen is
           too small for the one in the `default.html' template -->
      <!-- A table of contents inline in the text, in case the screen is too
     small for the one in the `default.html' template -->

  

<div>
  <p>
</p>
<p>Recently, I’ve been quite invested in learning maths with <a href="https://apps.ankiweb.net/index.html">Anki</a>.
Sadly, there are relatively few good resources out there on how to
twist Anki’s LaTeX pipeline into something generally acceptable,
without having to rely on MathJax.
As such, this post collects some bits and pieces from all over,
hoping to weave them together into something coherent.</p>
<!--more-->
<p><a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>Note that I will only concerns myself with
“how to make LaTeX work to an acceptable degree”,
instead of
“how to write mathematics notes”.
The latter is extremely dependent on the desired outcome,
types of maths that one studies,
experience of the person writing the notes, and so on.
Too many facets for me—or anyone, really—to give blanket recommendations.</p>
<p>A lot of things here are rehashes of <a href="https://unhewn-thoughts.org/anki/guide-on-using-latex-xetex-luatex-with-anki.html">Unhewn Thought’s</a>
post about the same thing,
as well as the official <a href="https://docs.ankiweb.net/math.html#latex">Anki documentation</a>
on the matter.
As always, this post is mostly about reminding myself about some details in two months’ time.</p>
<h2 id="mathjax-is-not-enough">MathJax is not enough</h2>
<p>Anki fully supports MathJax as a backend for its LaTeX previewing system.
This is great for most users:
MathJax is trivial to set up, and fits snugly into the generated HTML<!--
-->—there’s a reason it’s used so widely all over the internet!</p>
<p>However,
especially for personal notes like these,
MathJax might be amongst the worst solutions for me:
its <a href="https://docs.mathjax.org/en/latest/input/tex/extensions.html">macro support</a>
is awkward at best,
and since it only implements maths macros,
many of the packages that I’m using on a daily basis are not available at all.
I for one am certainly not going to rewrite my bespoke <a href="https://github.com/slotThe/latex-styles">style file</a>,
just so I get something that half-works with MathJax,
when I could be using the real thing instead!</p>
<h2 id="actually-writing-latex">Actually writing LaTeX</h2>
<p>To get this out of the way:
I have absolutely no opinions on how to <em>write</em> LaTeX with Anki.
I haven’t ever actually composed a note inside of the program,
and I’m doubtful that I ever will.</p>
<p>Instead, I write all of my notes in Org and then export them via <a href="https://github.com/anki-editor/anki-editor">anki-editor</a>.
This is very convenient,
as it means that I have all of the key bindings and snippets available that I normally write LaTeX with.<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>
Plus, rough edges that one would otherwise have to care about,
like <code>}}</code> inside of maths closing the current cloze deletion,
are solved completely by <code>anki-editor</code> without me even having to think about them.<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a>
As an added bonus,
Org mode’s <a href="https://www.youtube.com/watch?v=n-AfvuV-bYo">new LaTeX preview functionality</a> is just fantastic,
and makes crafting notes quite fun!</p>
<h2 id="aligning-fragments-vertically">Aligning fragments vertically</h2>
<p>One thing that MathJax does <em>very</em> well is its pixel-perfect alignment of LaTeX fragments.
In contrast, the default alignment is really rather bad.
It can, however, be somewhat improved by using CSS to vertically centre the image:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>img<span class="ex">[</span><span class="ss">src</span><span class="op">*=</span><span class="st">&quot;latex&quot;</span><span class="ex">]</span> {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">vertical-align</span><span class="ch">:</span> <span class="dv">middle</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<p>It looks like this:<a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a></p>
<p><img class="pure-img" src="../images/anki-latex/centered.png" alt="A note with approrimately centred LaTeX"></p>
<p>Very far from perfect, but readable.
Since this seems to be the only drawback with not using MathJax,
I’ll take it.
Content over form—at least in this case.</p>
<h2 id="preview-generation-with-preview.sty">Preview generation with <code>preview.sty</code></h2>
<p>The <code>preview</code> package is specifically designed for these kinds of previews.
Originally written for <a href="https://www.gnu.org/software/auctex/">AUCTeX</a>,
it has made its way into all TeX distributions that I know of.
In addition to being used all over Emacs,
<code>preview</code> is being employed by quite a few other programs as well.</p>
<p>Amongst intangible benefits such as familiarity,
I chose <code>preview</code> mostly because
it “correctly” tightens display maths environments not just to the maths itself,
but to the whole line.
Operationally this means that display maths is automatically centred on my Anki card,
even if the rest of the text is left-aligned.<a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a></p>
<p>To use <code>preview.sty</code> in this way,
one simply has to include it Anki’s LaTeX preamble—<code>C-S-n</code> and then “Options”—and wrap the whole document (i.e., the formula being rendered) with the <code>preview</code> environment:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode tex"><code class="sourceCode latex"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co">%%% Header</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="bu">\documentclass</span>{<span class="ex">article</span>}</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="bu">\usepackage</span>[active,tightpage]{<span class="ex">preview</span>}</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="kw">\begin</span>{<span class="ex">document</span>}</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="co">% Remove extra space above display maths.</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="fu">\setlength</span>{<span class="fu">\abovedisplayskip</span>}{0pt}</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="kw">\begin</span>{<span class="ex">preview</span>}</span></code></pre></div>
<div class="sourceCode" id="cb3"><pre class="sourceCode tex"><code class="sourceCode latex"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="co">%%% Footer</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>{<span class="ex">preview</span>}</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>{<span class="ex">document</span>}</span></code></pre></div>
<p>For this to work smoothly, I also highly recommend to enable SVG support,
and to tweak Anki’s LaTeX compilation pipeline.
The handy <a href="https://ankiweb.net/shared/info/937148547">Edit LaTeX build process</a> addon can be used for that purpose.
My <code>svgCommands</code> settings look like this:<a href="#fn6" class="footnote-ref" id="fnref6" role="doc-noteref"><sup>6</sup></a></p>
<pre><code> &quot;svgCommands&quot;: [
      [
          &quot;latex&quot;,
          &quot;-interaction=nonstopmode&quot;,
          &quot;tmp.tex&quot;
      ],
      [
          &quot;dvisvgm&quot;,
          &quot;--page=1-&quot;,
          &quot;--optimize&quot;,
          &quot;--clipjoin&quot;,
          &quot;--relative&quot;,
          &quot;--bbox=preview&quot;,
          &quot;--no-fonts&quot;,
          &quot;tmp.dvi&quot;,
          &quot;-o&quot;,
          &quot;tmp.svg&quot;
      ]
  ]</code></pre>
<p>The generated LaTeX might be too small,
though fixing this just involves a small CSS modification to the <code>latex</code> class:</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.latex</span> {</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>  zoom<span class="ch">:</span> <span class="dv">160</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<p>If you want to dig deeper into how Anki generates maths, I recommend looking at
<a href="https://github.com/ankitects/anki/blob/c29125939db1dbb9ef48d42f425eb70abaee53ad/pylib/anki/latex.py">latex.py</a>,
<a href="https://github.com/ankitects/anki/blob/c29125939db1dbb9ef48d42f425eb70abaee53ad/rslib/src/latex.rs">latex.rs</a>,
and the
<a href="https://unhewn-thoughts.org/anki/guide-on-using-latex-xetex-luatex-with-anki.html#tex-generation"><code>.tex</code> Generation</a>
section in Unhewn Thought’s blog post.<a href="#fn7" class="footnote-ref" id="fnref7" role="doc-noteref"><sup>7</sup></a></p>
<h3 id="complete-preamble">Complete preamble</h3>
<p>My complete preamble is not much larger than what I have shown above;
it merely also includes my <a href="https://github.com/slotThe/latex-styles">personal style file</a>.</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode tex"><code class="sourceCode latex"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="co">%%% Header</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="bu">\documentclass</span>{<span class="ex">article</span>}</span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="bu">\usepackage</span>[type=org,math=fancy]{<span class="ss">$HOME/.tex/styles/style}</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="sc">\usepackage</span><span class="ss">[active,tightpage]{preview}</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="sc">\usepackage</span><span class="ss">{xcolor}</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="kw">\begin</span>{<span class="ex">document</span>}</span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a><span class="sc">\setlength</span><span class="ss">{</span><span class="sc">\parindent</span><span class="ss">}{0in}</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a><span class="sc">\setlength</span><span class="ss">{</span><span class="sc">\abovedisplayskip</span><span class="ss">}{0pt}</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a><span class="kw">\begin</span>{<span class="ex">preview</span>}</span></code></pre></div>
<div class="sourceCode" id="cb7"><pre class="sourceCode tex"><code class="sourceCode latex"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="co">%%% Footer</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>{<span class="ex">preview</span>}</span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>{<span class="ex">document</span>}</span></code></pre></div>
<h2 id="conclusion">Conclusion</h2>
<p>With these relatively straightforward tweaks,
Anki’s LaTeX integration is really plug and play—I can just use my whole style file as-is,
no extra care needed.
Nice.</p>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>{-} I will not waste the reader’s time with an introduction of what Anki is or why spaced repetition is useful;
<a href="https://gwern.net/spaced-repetition">other</a>
<a href="https://augmentingcognition.com/ltm.html">people</a>
have done a much better job at that than I ever could.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>See, for example,
<a href="https://tony-zorman.com/posts/my-phd-workflow.html#digital-notes">here</a>,
<a href="https://tony-zorman.com/posts/emacs-potpourri.html#latex">here</a>,
<a href="https://tony-zorman.com/posts/pretty-latex.html">here</a>,
or
<a href="https://gitlab.com/slotThe/dotfiles/-/blob/master/emacs/lisp/hopf-latex-math.el?ref_type=heads">here</a>.<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>For the specific example of maths and cloze deletions,
one needs to set <code>anki-editor-break-consecutive-braces-in-LaTeX</code>.
This should probably be the default—and perhaps it will be in the future!<a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>{-} As you can see, I haven’t bothered with fancy CSS to make the cards pretty. Content over form.<a href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p>One could solve this by making <code>anki-editor</code> output an extra <code>div</code> that it only wraps display maths with<!--
  -->—and I have done that in the past—but using <code>preview.sty</code> feels much cleaner to me.<a href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn6"><p>{-} For compatibility reasons with all of my papers (and other notes) I use <code>latex</code> here.
In case you are not bound by these restrictions—or more adventurous than me—I would recommend you use lualatex instead.<a href="#fnref6" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn7"><p>{-} It should be noted that Anki—thankfully—caches previews by hashing their contents,
and reuses the same SVG every time it encounters a LaTeX fragment with the same hash.
Thus, if you want to completely regenerate everything, just delete the respective directory.
For me, this is <code>~/.local/share/Anki2/User 1/collection.media/</code>.<a href="#fnref7" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
</div>

      <!-- Body is included in the above file -->
    </section>
    
</article>
]]></summary>
</entry>
<entry>
    <title>The tensor product of S-modules is a convolution product</title>
    <link href="https://tony-zorman.com/posts/day-convolution-for-operads.html" />
    <id>https://tony-zorman.com/posts/day-convolution-for-operads.html</id>
    <published>2023-06-12T00:00:00Z</published>
    <updated>2023-06-12T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
    <p class="header">
      
        Posted on 2023-06-12
      
      
        &thinsp;·&thinsp; last modified: 2024-08-30
      
      
        &thinsp;·&thinsp; <span title="1481 words">6 min read</span> &thinsp;·&nbsp;
      
      
        <a title="All pages tagged 'maths'." href="/tags/maths.html" rel="tag">maths</a>
      
    </p>
    <section>
      <!-- A table of contents inline in the text, in case the screen is
           too small for the one in the `default.html' template -->
      <!-- A table of contents inline in the text, in case the screen is too
     small for the one in the `default.html' template -->

  

<div>
  <p>Classically, (algebraic) symmetric <a href="https://ncatlab.org/nlab/show/operad">operads</a> are defined as certain graded objects,
each level coming equipped with a nice action of the symmetric group,
which are also monoids in some sense.
While it is often noted that the grading and action correspond exactly to the data of a functor,
the fact that virtually all of the structure needed to define operads can be expressed categorically is often passed by,
which I think is quite the shame!
In this post I want to explicitly calculate the Day convolution for symmetric operads in the category of
vector spaces—though the argument holds for all nice enough target categories—in order
to show that it is nothing but the usual tensor product of modules.</p>
<!--more-->
<p>While there is more to this
story—all of which is wonderfully explained in <span class="citation" data-cites="kelly05:j">[@kelly05:j]</span>—I
think focusing on the tensor product of <span class="math inline">\mathbb{S}</span>-modules in the case of vector spaces already gives one a clue
as to how this whole translation works in general.</p>
<h2 id="the-day-convolution-product">The Day convolution product</h2>
<p>If we have nice enough categories <span class="math inline">\mathcal{C}</span> and <span class="math inline">\mathcal{V}</span>,
then the functor category <span class="math inline">[\mathcal{C}, \mathcal{V}]</span> inherits many of the properties of the two parent categories.
One of them is being <em>monoidal</em>; if there are nice functors
<span class="math display">
  \otimes_{\mathcal{C}} \colon \mathcal{C} \times \mathcal{C} \to \mathcal{C},
  \qquad \qquad
  \otimes \colon \mathcal{V} \times \mathcal{V} \to \mathcal{V},
</span>
that are associative and unital in appropriate ways,
then there is also a nice monoidal structure—called the <em>(Day) convolution product</em>—on <span class="math inline">[\mathcal{C}, \mathcal{V}]</span>.<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a></p>
<p>Intuitively,
one can think of the Day convolution much like the tensor product of vector spaces.
Given functors <span class="math inline">F, G, H \in [\mathcal{C}, \mathcal{V}]</span>,
a <em>bilinear map</em> is a natural transformation
<span class="math display">
  \beta ≔
  \big\{
    \beta_{v, w} \colon
      Fv \otimes Gw \to H(v \otimes_{\mathcal{C}} w)
  \big\}_{v, w \in \mathcal{V}}.
</span>
Just as in the concrete case,
maps from the convolution product <span class="math inline">F \star G</span> to <span class="math inline">H</span> now correspond to exactly these bilinear maps,
and can be seen as some sort of “linearisation”.</p>
<p>Setting <span class="math inline">\mathcal{V} ≔ \mathsf{Vect}_{\mathtt{k}}</span>—for some field <span class="math inline">\mathtt{k}</span>—one
can also give a definition in more explicit terms:<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>
<span class="math display">
  (F \star G)x
  ≔ \int^{c,d \in \mathcal{C}}
      \mathtt{k}\mathcal{C}(c \otimes_{\mathcal{C}} d, x) \otimes Fc \otimes Gd.
</span>
The <span class="math inline">\mathtt{k}\mathcal{C}(c \otimes_{\mathcal{C}} d, x)</span> notation is meant to indicate
the linearisation of the hom-set;
i.e., we take the free vector space with basis <span class="math inline">\mathcal{C}(c \otimes_{\mathcal{C}} d, x)</span>.
The little integral sign above is called a <em>coend</em>.
These are nice universal objects, and show up all the time when working with functor categories.
Still in the case of <span class="math inline">\mathcal{V} ≔ \mathsf{Vect}_{\mathtt{k}}</span>,
suppose that <span class="math inline">P \colon \mathcal{C}^{\mathrm{op}} \otimes \mathcal{C} \to \mathcal{V}</span> is a functor.
In general, one can speak of the coend <span class="math inline">\int^{c \in \mathcal{C}} P(c, c)</span> of that functor;
a more explicit description can be given as a certain coequaliser:<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a>
<span class="math display">
 \bigoplus_{f \colon c \to d} P(d, c) \rightrightarrows \bigoplus_{c} P(c, c) \twoheadrightarrow \int^{c} P(c, c).
</span>
For a morphism <span class="math inline">f \colon c \to d</span>,
the two parallel arrows are induced by
<span class="math display">
  P(f, c) \colon P(d, c) \to P(c, c) \quad \text{and} \quad P(d, f) \colon P(d, c) \to P(d, d).
</span></p>
<p>To get a feeling for these things,
consider the following example in the case of <span class="math inline">\mathcal{V} ≔ \mathsf{Set}</span>.
We know how coequalisers look in the category of sets: they are merely certain equivalence relations.
Squinting at the induced arrows,
one wants to identify <span class="math inline">P(f, c)(x)</span> with <span class="math inline">P(d, f)(x)</span>,
for <span class="math inline">c, d \in \mathcal{C}</span>,
<span class="math inline">x \in P(d, c)</span>,
and <span class="math inline">f \colon c \to d</span>.<a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a>
In the special case that <span class="math inline">P</span> is the hom-functor <span class="math inline">\mathcal{C}({-},{-})</span>,
the induced maps are
<span class="math display">
  {-} \circ f \colon \mathcal{C}(d, c) \to \mathcal{C}(c, c)
  \qquad \text{and} \qquad
  f \circ {-} \colon \mathcal{C}(d, c) \to \mathcal{C}(d, d).
</span>
More plainly, given <span class="math inline">x \colon d \to c</span> and <span class="math inline">f \colon c \to d</span>,
we have <span class="math inline">x \circ f \sim f \circ x</span>.
Thus, the coend here can be seen as a kind of abelianisation of arrows.</p>
<h2 id="the-tensor-product-of-mathbbs-modules">The tensor product of <span class="math inline">\mathbb{S}</span>-modules</h2>
<p>Consider the following category <span class="math inline">\mathbb{S}</span>:
objects are natural numbers,
and morphism spaces are given by <span class="math inline">\mathbb{S}(n, m) = S_n</span> if <span class="math inline">n = m</span>, and <span class="math inline">0</span> otherwise,
where <span class="math inline">S_n</span> is the symmetric group of <span class="math inline">n</span> elements.</p>
<p>Again staying firmly in the case that <span class="math inline">\mathcal{V} = \mathsf{Vect}_{\mathtt{k}}</span>,
an <em><span class="math inline">\mathbb{S}</span>-module</em> is a family of vector spaces <span class="math inline">F = (F0, F1, F2, \dots)</span>,
each of which is a left <span class="math inline">\mathtt{k}S_n</span>-module.
Alternatively, it is a functor from <span class="math inline">\mathbb{S}</span> to <span class="math inline">\mathcal{V}</span>—this is,
of course, where the convolution product comes into play.
The category of <span class="math inline">\mathbb{S}</span>-modules is usually denoted by <span class="math inline">\mathbb{S}\text{-}\mathrm{Mod}</span>.</p>
<p>This construction might seem somewhat artificial at first,
but—as mentioned before—<a href="https://ncatlab.org/nlab/show/operad">(symmetric) operads</a> turn out to be <span class="math inline">\mathbb{S}</span>-modules
that are also monoids with respect to a certain monoidal structure
(not the Day convolution, but a related one).
As such, <span class="math inline">\mathbb{S}</span>-modules are quite well studied as a category.</p>
<p>One could put quite a few monoidal structures on <span class="math inline">\mathbb{S}</span>,
but what is usually called the <em>tensor product of <span class="math inline">\mathbb{S}</span>-modules</em> is defined as follows:
given <span class="math inline">F, G \in \mathbb{S}\text{-}\mathrm{Mod}</span>, let
<span class="math display">
  (F \otimes G)r ≔ \bigoplus_{n + m = r} \mathsf{Ind}_{S_n \times S_m}^{S_r} Fn \otimes_{\mathtt{k}} Gm,
</span>
where <span class="math inline">\mathsf{Ind}_{S_n \times S_m}^{S_r}</span> denotes the <a href="https://ncatlab.org/nlab/show/induced+representation">induced representation</a>.<a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a>
Alternatively, one could write this with <a href="https://ncatlab.org/nlab/show/shuffle">shuffles</a>:
<span class="math display">
  (F \otimes G)r ≔ \bigoplus_{n + m = r} \mathtt{k}\mathrm{Shuf}(n, m) \otimes_{\mathtt{k}} Fn \otimes_{\mathtt{k}} Gm,
</span></p>
<p>This tensor product doesn’t look super different than the convolution product above,
but it remains to see that the equivalence relation generated by the coequaliser really glues things together in just the right way.
Let’s try that.</p>
<h2 id="bringing-everything-together">Bringing everything together</h2>
<p>In a slightly more general setting—now considering
an arbitrary (monoidal) category <span class="math inline">\mathcal{C}</span> instead of <span class="math inline">\mathbb{S}</span>,
but still fixing vector spaces over <span class="math inline">\mathtt{k}</span> for
<span class="math inline">\mathcal{V}</span>—the
Day convolution <span class="math inline">F \star G</span> evaluated at <span class="math inline">x \in \mathcal{C}</span> can be expressed as</p>
<p><span class="math display">
  \bigoplus_{\substack{f \colon a \to a' \\ g \colon b \to b'}}
    \mathtt{k}\mathcal{C}(a' \otimes b', x) \otimes_{\mathtt{k}} Fa \otimes_{\mathtt{k}} Gb
  \rightrightarrows
  \bigoplus_{a, b \in \mathcal{C}}
    \mathtt{k}\mathcal{C}(a \otimes b, x) \otimes_{\mathtt{k}} Fa \otimes_{\mathtt{k}} Gb.
</span></p>
<p>Looking at the induced arrows,
and—as usual—considering only elementary tensors,
on the left side we have “tuples” of
<span class="math display">
  h \colon a' \otimes b' \to x,\quad  v \in Fa,\quad  w \in Gb.
</span>
They are then mapped to either
<span class="math display">
  h \circ (f \otimes g) \colon a \otimes b \to x,\quad  v \in Fa,\quad  w \in Gb
</span>
or
<span class="math display">
  h \colon a' \otimes b' \to x,\quad (Ff) v \in Fa',\quad (Gg) w \in Gb',
</span>
and these two representations are identified.</p>
<p>In the special example of operads,
the above coequaliser is easier to
understand—remember that <span class="math inline">\mathbb{S}</span> is a category with only endomorphisms.
Thus, due to <span class="math inline">\mathbb{S}(a + b, x)</span> vanishing, all factors in the coproduct where <span class="math inline">a + b \neq x</span> are automatically 0.
As such, the whole thing transforms into</p>
<p><span class="math display">
  \bigoplus_{\substack{\sigma \in S_n \\ \tau \in S_m \\ n + m = r}}\!\!\!
    \mathtt{k}\mathbb{S}(n + m, r) \otimes_{\mathtt{k}} Fn \otimes_{\mathtt{k}} Gm
  \rightrightarrows
  \!\bigoplus_{n + m = r}\!\!
    \mathtt{k}\mathbb{S}(n + m, r) \otimes_{\mathtt{k}} Fn \otimes_{\mathtt{k}} Gm.
</span></p>
<p>The identifications
<span class="math display">
  h \circ (\sigma + \tau),\quad v         ,\quad w
  \qquad\sim\qquad
  h                      ,\quad (F\sigma) v,\quad (G\tau) w
</span>
now look an awful lot like identifying some left actions with some right actions.
Indeed, due to the extra condition that <span class="math inline">n + m = r</span>,
we are effectively permuting <span class="math inline">r</span>
by applying the action of two partitions of size <span class="math inline">n</span> and <span class="math inline">m</span>—a shuffle product!
Overall, the expression
<span class="math display">
  \big(\!\!\!\!
    \bigoplus_{n + m = r} \mathtt{k}\mathbb{S}(n + m, r) \otimes_{\mathtt{k}} Fn \otimes_{\mathtt{k}} Gm
  \big)
  /
  {\sim}
</span>
simplifies to
<span class="math display">
  \bigoplus_{n + m = r} \mathtt{k}\mathrm{Shuf}(n,m)  \otimes_{\mathtt{k}} Fn \otimes_{\mathtt{k}} Gm,
</span>
or, in different notation,
<span class="math display">
  \bigoplus_{n + m = r} \mathsf{Ind}_{S_n \times S_m}^{S_k} Fn \otimes_{\mathtt{k}} Gm,
</span>
which is exactly the kind of formula that we wanted to end up with. Neat.</p>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Provided some extra technical conditions:
<span class="math inline">\mathcal{C}</span> should be small,
and <span class="math inline">\mathcal{V}</span> should be cocomplete,
with the tensor product preserving colimits in both variables.
Alternatively, one could talk about enriched categories and functors,
but since I will work with <span class="math inline">\mathcal{V} = \mathsf{Vect}_{\mathtt{k}}</span> for most of the post,
these more involved concepts seem overkill.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>Really, this definition always works,
one just needs to substitute the <span class="math inline">\mathtt{k}</span>-linearisation of the hom-set
with a <a href="https://ncatlab.org/nlab/show/copower">Copower</a>.
I have written about these things <a href="https://tony-zorman.com/posts/weighted-colimits.html#copowers">before</a>,
just in a different context.<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>{-} 󠀠
󠀠</p>
<p>The big direct sum
<span class="math inline">\bigoplus_{f \colon V \to W}</span> is shorthand for <span class="math inline">\bigoplus_{V, W} \bigoplus_{f \in \mathcal{V}(V, W)}</span>.
Really, this is a coproduct in general,
but we are in <span class="math inline">\mathsf{Vect}_{\mathtt{k}}</span>,
so writing a direct sum here is appropriate.<a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>This may or may not be an equivalence relation,
but we can always complete to one.<a href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p>{-} As an aside (literally),
equipped with the tensor product of <span class="math inline">\mathbb{S}</span>-modules,
it’s not so hard to define the <em>plethysm product</em> <span class="math inline">\odot</span>,
which is actually the one that operads are monoids for:
<span class="math display">
    (F \odot G)n ≔ \bigoplus_{m \geq 0} Fm \otimes_{S_m} G^{\star m}n.
  </span>
This can, of course, also be expressed with coends:
<span class="math display">
    (F \odot G)n ≔ \int^{m} Fm \otimes_{\mathtt{k}} G^{\star m}n.
  </span>
In both expressions,
<span class="math inline">G^{\star m}</span> is the <span class="math inline">m</span>-fold tensor product (Day convolution) of <span class="math inline">G</span> with itself:
<span class="math display">
    \int^{r_1 \dots r_m}\!\! \mathbb{S}(r_1 + \dots + r_m, n) \otimes G r_1 \otimes \dots \otimes G r_m.
  </span><a href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
</div>

      <!-- Body is included in the above file -->
    </section>
    
</article>
]]></summary>
</entry>
<entry>
    <title>Duality in Monoidal Categories</title>
    <link href="https://tony-zorman.com/posts/duality-in-monoidal-categories.html" />
    <id>https://tony-zorman.com/posts/duality-in-monoidal-categories.html</id>
    <published>2023-01-10T00:00:00Z</published>
    <updated>2023-01-10T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
    <p class="header">
      
        Posted on 2023-01-10
      
      
        &thinsp;·&thinsp; last modified: 2023-01-12
      
      
        &thinsp;·&thinsp; <span title="857 words">4 min read</span> &thinsp;·&nbsp;
      
      
        <a title="All pages tagged 'maths'." href="/tags/maths.html" rel="tag">maths</a>
      
    </p>
    <section>
      <!-- A table of contents inline in the text, in case the screen is
           too small for the one in the `default.html' template -->
      <!-- A table of contents inline in the text, in case the screen is too
     small for the one in the `default.html' template -->

  

<div>
  <p>I have a new preprint <a href="https://arxiv.org/abs/2301.03545">on the arXiv</a>! It is joint work with
Sebastian Halbig, and concerns itself with the interplay of different
structures on monoidal categories that give rise to a notion of
“duality”. At five pages, it is a very short paper; yet I’d still like
to give a little teaser as to what kind of question we sought to answer.</p>
<!--more-->
<h2 id="setting-the-scene">Setting the scene</h2>
<p>We mainly concerned ourselves with three notions of <em>duality</em> for
(non-symmetric!) <a href="https://ncatlab.org/nlab/show/monoidal+category">monoidal</a> categories: <a href="https://ncatlab.org/nlab/show/closed+monoidal+category">closed monoidal</a> categories,
<a href="https://ncatlab.org/nlab/show/star-autonomous+category">*-autonomous</a><a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a> categories, and <a href="https://ncatlab.org/nlab/show/rigid+monoidal+category">rigid (monoidal)</a> categories. It
is well-known that these concepts are all connected in the following
way.</p>
<blockquote>
<ol type="1">
<li><p>Every *-autonomous category is closed monoidal.
For all <span class="math inline">x, y \in \mathcal{C}</span>, the internal-hom <span class="math inline">[x, y]</span>
is given by <span class="math inline">D^{-1}(Dy \otimes x)</span>, where <span class="math inline">D</span> is the duality
functor.</p></li>
<li><p>Every rigid monoidal category is *-autonomous. The internal-hom
then simplifies to <span class="math inline">[x, y] = y \otimes x^*</span>, where <span class="math inline">{-}^*</span> is the
duality functor.</p></li>
</ol>
</blockquote>
<p>An obvious next question one could ask is: does this already
characterise rigid and *-autonomous categories? More explicitly, are
there any conditions one could impose on the internal-hom, such that
closedness already implies rigidity? What about *-autonomy?</p>
<h2 id="autonomy">*-autonomy</h2>
<p>We’ll start with a positive result for *-autonomy. So the question is
this: given a closed monoidal category <span class="math inline">\mathcal{C}</span> in which the
internal-hom is given by tensoring with another object, is this category
already *-autonomous?</p>
<p>More formally, is it true that <span class="math inline">\mathcal{C}</span> is *-autonomous if
for all <span class="math inline">x \in \mathcal{C}</span>, there exists an object
<span class="math inline">Dx \in \mathcal{C}</span>, such that there is an adjunction
<span class="math display">
  {-} \otimes x \dashv {-} \otimes Dx?
</span></p>
<p>Almost! In good cases, we can recover what we want from just a little
extra condition:</p>
<blockquote>
<p>Let <span class="math inline">\mathcal{C}</span> be a monoidal category. Suppose that for all
<span class="math inline">x \in \mathcal{C}</span> there exist objects
<span class="math inline">Lx, Rx \in \mathcal{C}</span>, such that we have adjunctions
<span class="math display">
  {-} \otimes Lx  \dashv  {-} \otimes x  \dashv  {-} \otimes Rx.
</span>
Then <span class="math inline">\mathcal{C}</span> is *-autonomous.</p>
</blockquote>
<p>Using the notion of a *-autonomous category of <span class="citation" data-cites="boyarchenko13:groth-verdier">[@boyarchenko13:groth-verdier]</span>—that is, for
every <span class="math inline">x \in \mathcal{C}</span> the functor <span class="math inline">\mathcal{C}({-} \otimes x, 1)</span> is
representable by <span class="math inline">Dx</span>—this becomes an exercise in “Yoneda Yoga”. More
precisely, one uses the fact that the Yoneda embedding is fully faithful
a lot. Try it yourself!</p>
<h2 id="rigidity">Rigidity</h2>
<p>At first sight, it’s not even clear there is anything to show for
rigidity. Something one is immediately tempted to do is to conjecture
the following:</p>
<blockquote>
<p>A closed monoidal category <span class="math inline">\mathcal{C}</span> is rigid monoidal
if for all <span class="math inline">x \in \mathcal{C}</span> we have
<span class="math inline">[x, {-}] \cong {-} \otimes Dx</span>, for some object assignment
<span class="math inline">D \colon \mathrm{Ob}\,\mathcal{C} \to \mathrm{Ob}\,\mathcal{C}</span>.</p>
</blockquote>
<p>This seems sensible; after all, the snake identities of an adjunction
look almost completely the same as the ones for a dual!<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a> However, if
one sits down and actually writes down the diagrams, something doesn’t
quite fit. As a reminder, suppose we have an adjunction
<span class="math inline">F\colon \mathcal{C} \leftrightarrows \mathcal{C} : \! U</span> with unit
<span class="math inline">\eta \colon \mathrm{Id}_{\mathcal{C}} \Longrightarrow U F</span>
and counit
<span class="math inline">\varepsilon \colon F U \Longrightarrow \mathrm{Id}_{\mathcal{C}}</span>.
The snake identities for this adjunction look like</p>
<p><img class="pure-img" src="../images/duality-in-monoidal-categories/snake-idents-adjunction.png" alt="Usual snake identities of an adjunction"></p>
<p>In particular, we get two such diagrams if we apply everything to the
monoidal unit <span class="math inline">1 \in \mathcal{C}</span>. Specialised to the adjunction
<span class="math inline">{-} \otimes x \dashv {-} \otimes Dx</span> the above then becomes</p>
<p><img class="pure-img" src="../images/duality-in-monoidal-categories/snake-idents-adjunction-specialised.png" alt="Snake identities of an adjunction, specialised to this use-case"></p>
<p>These are just the snake identities for duals if we make the definitions
<span class="math inline">\mathrm{ev}_x ≔ \varepsilon_1</span> and <span class="math inline">\mathrm{coev}_x ≔ \eta_1</span>, right?
Wrong! In the latter case we, for example, require that
<span class="math display">
  (x \otimes \varepsilon_1) \circ (\eta_1 \otimes x) = \mathrm{id}_x.
</span>
However, the above diagram does <em>not</em> say that! It says that the
relation
<span class="math display">
  \varepsilon_x \circ (\eta_1 \otimes x) = \mathrm{id}_x
</span>
holds. This means that we would have to impose the additional
conditions that <span class="math inline">\varepsilon</span> and <span class="math inline">\eta</span> are morphisms of modules; i.e.,
<span class="math inline">\varepsilon_x \overset{\scriptsize{!}}{=} x \otimes \varepsilon_1 = x \otimes \mathrm{coev}_x</span>,
as well as a dual statement. This is not the case in general.</p>
<p>Finding a counterexample now works by exploiting exactly this fact: we
write down a syntactic category <span class="math inline">\mathcal{D}</span> that is generated by a
family of morphisms
<span class="math display">
  \eta_{m, n} \colon m \to m \otimes n \otimes n
  \qquad \text{and} \qquad
  \varepsilon_{m, n} \colon m \otimes n \otimes n \to m,
</span>
and impose relations guaranteeing the naturality of these arrows. There
is a subcategory <span class="math inline">\mathcal{C}</span> of <span class="math inline">\mathcal{D}</span> in which we additionally
require <span class="math inline">\eta</span> and <span class="math inline">\varepsilon</span> satisfy the snake equations of an
adjunction. One can now show that the category <span class="math inline">\mathcal{C}</span> is closed
monoidal, with the appealing adjunction
<span class="math display">
  {-} \otimes n \dashv {-} \otimes n.
</span>
However, it is not rigid! The proof exploits certain strong monoidal
functors to the category of finite-dimensional vector spaces, and shows
that the subset of arrows <em>in <span class="math inline">\mathcal{D}</span></em> that contains one of the
snake identities for duals is (i) closed under exactly these relations,
and (ii) all morphisms in this set have length at least two. Hence, if
we project any morphism down to <span class="math inline">\mathcal{C}</span>, it can’t possibly be the
identity, and thus the snake identities for duals do not hold. If you
want more details, check the paper <span class="citation" data-cites="halbig23:dualit-monoid-categ">[@halbig23:dualit-monoid-categ]</span>!</p>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Or rather, a non-symmetric variant of it called an <em>r-category</em> in
<span class="citation" data-cites="boyarchenko13:groth-verdier">[@boyarchenko13:groth-verdier]</span>.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>This is not a coincidence; for example, adjoints in the monoidal
category <span class="math inline">([\mathcal{C}, \mathcal{C}], \circ, \mathrm{Id})</span> are
exactly duals!.<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
</div>

      <!-- Body is included in the above file -->
    </section>
    
</article>
]]></summary>
</entry>
<entry>
    <title>Understanding Weighted Colimits as Tensor Products of Modules</title>
    <link href="https://tony-zorman.com/posts/weighted-colimits.html" />
    <id>https://tony-zorman.com/posts/weighted-colimits.html</id>
    <published>2022-10-15T00:00:00Z</published>
    <updated>2022-10-15T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
    <p class="header">
      
        Posted on 2022-10-15
      
      
        &thinsp;·&thinsp; last modified: 2023-03-13
      
      
        &thinsp;·&thinsp; <span title="3771 words">16 min read</span> &thinsp;·&nbsp;
      
      
        <a title="All pages tagged 'maths'." href="/tags/maths.html" rel="tag">maths</a>
      
    </p>
    <section>
      <!-- A table of contents inline in the text, in case the screen is
           too small for the one in the `default.html' template -->
      <!-- A table of contents inline in the text, in case the screen is too
     small for the one in the `default.html' template -->

  

<div>
  <p>If you’ve been doing category theory for any amount of time, you’ll
probably have stumbled upon enriched category theory as a way of
expressing categorical ideas internal to some context other than
<strong>Set</strong>. Reading into it, you might have come across these foreign
sounding concepts like weighted (co)limits and wondered what that was
all about—and then got lost for a few days, trying to decipher what
<a href="http://www.tac.mta.ca/tac/reprints/articles/10/tr10abs.html">Kelly</a> is talking about and why symbols resembling tensor
products are suddenly being thrown around. At least that’s what
happened to me.</p>
<p>After scouring the internet for good resources, I found two really
enlightening blog posts: one by <a href="https://golem.ph.utexas.edu/category/2007/02/day_on_rcfts.html#c007723">Todd Trimble</a> and the
other by <a href="https://golem.ph.utexas.edu/category/2007/02/day_on_rcfts.html#c007688">John Baez</a>—and they’re too good not to share.
Plus, people always say that you don’t understand a concept unless you
can explain it to someone else, so here’s my shot at it!</p>
<!--more-->
<p>I will assume familiarity with basic notions of category theory (limits,
colimits, adjunctions, monoidal categories, …), as well as elementary
abstract algebra (in particular, rings and modules). If you’re not
comfortable with these and have a lot of time to kill, I recommend
<a href="https://math.jhu.edu/~eriehl/context.pdf">Category Theory in Context</a> by Emily Riehl for the former and
<a href="https://bookstore.ams.org/gsm-56/">A Course in Algebra</a> by Ernest Vinberg for the latter.</p>
<p>Really, it’s good if you have heard about enriched category theory
before, as this is where weighted colimits tend to naturally crop up a
lot; also because I can’t possibly do the topic justice in a single blog
post. I will still try, of course, but be warned. Even if you’re not
familiar with enriched categories, however, this post might still be of
interest. Weighted colimits do also appear in ordinary category theory,
so feel free to substitute <span class="math inline">\mathsf{Set}</span> for <span class="math inline">\mathcal{V}</span> whenever you
feel like it. On top of that, most of the <a href="#weighted-colimits">main
part</a> of the text doesn’t use enrichment at all.</p>
<p>Before we start I must note that—more-so than elsewhere—these are very
much not my own thoughts. I’m just retelling the story in order to
understand it better myself. Sources and resources for everything are
linked <a href="#resources">at the end</a>. The key insights come from the already
mentioned blog posts by <a href="https://golem.ph.utexas.edu/category/2007/02/day_on_rcfts.html#c007723">Trimble</a> and <a href="https://golem.ph.utexas.edu/category/2007/02/day_on_rcfts.html#c007688">Baez</a>,
as well as the accompanying (resulting) <a href="https://ncatlab.org/nlab/show/weighted+colimit">nLab
article</a>.</p>
<h2 id="enriched-category-theory">Enriched category theory</h2>
<p>Before diving into the gory details, enriched category theory is perhaps
best explained a bit more intuitively at first. In short, instead
ordinary categories—whose hom-<em>sets</em> are always sets—one studies
so-called <span class="math inline">\mathcal{V}</span>-categories, whose hom-<em>objects</em> are objects in
some “environmental” category <span class="math inline">\mathcal{V}</span>. This category is what
replaces <span class="math inline">\mathsf{Set}</span>, so it will usually be assumed to have some very
nice properties. For the purposes of this blog post, I will assume that
<span class="math inline">(\mathcal{V}, \otimes, 1)</span> is a (small) complete and cocomplete closed
symmetric monoidal category.<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a> If you don’t know what some of these
words mean, you can read that as “It’s an environment with enough
structure so that a large chunk of ordinary category theory makes sense
internal to it.”</p>
<p>In addition, I would also like to fix a <span class="math inline">\mathcal{V}</span>-category
<span class="math inline">\mathcal{C}</span> for the rest of this blog post. For the moment, you can
think of this like an ordinary category such that for any two objects
<span class="math inline">a</span> and <span class="math inline">b</span> in <span class="math inline">\mathcal{C}</span>, we have that <span class="math inline">\mathcal{C}(a, b) ≔
\mathrm{Hom}_{\mathcal{C}}(a, b)</span> is an object in <span class="math inline">\mathcal{V}</span>.
Naturally, all the usual axioms of a category—like associativity and
unitality of morphisms—ought to hold in this new setting; however,
expressing these laws is a little bit more involved now. The fact that
<span class="math inline">\mathcal{C}(a,b)</span> is an object in <span class="math inline">\mathcal{V}</span> means that it’s a
“black box”—we can’t peek into it anymore! Writing <span class="math inline">f \in
\mathcal{C}(a,b)</span> is no longer legal, so we somehow have to make do with
not talking about individual morphisms. As such, a little bit more care
has to be taken for the precise definition of an enriched category to
make sense.</p>
<p>Before we get to that, however, a few examples should do wonders for
seeing just how wide-spread the concept really is in mathematics.
Thankfully—lest the world explodes—categories enriched in <span class="math inline">\mathsf{Set}</span>
are exactly ordinary categories. An equally familiar example should be
<span class="math inline">\mathsf{vect}_k</span>: the category of finite-dimensional vector spaces over
a field <span class="math inline">k</span>. It is easy to verify that the linear maps between two
vector spaces are again a vector space, and hence <span class="math inline">\mathsf{vect}_k</span> is,
much like the category of sets, <em>enriched over itself</em>. So whenever you
do linear algebra, you’re in the setting of enriched category theory
already! Categories enriched over <span class="math inline">\mathsf{vect}_k</span>, usually called
<span class="math inline">k</span>-linear categories, are plentiful “in the wild”; for example,
representation theorists might know Tannakian categories, or the
Temperley–Lieb category.</p>
<p>Other examples of enriched categories include 2-categories<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a> as those
enriched over <span class="math inline">\mathsf{Cat}</span>, and preadditive categories, which are
enriched over <span class="math inline">\mathsf{Ab}</span>. Last, but certainly not least, rings can
also be seen as categories; namely, they have just a single object
<span class="math inline">\star</span> and <span class="math inline">\mathrm{Hom}(\star,\star)</span> forms an abelian group—stay
tuned for more on this.</p>
<p>With all of these examples in mind, let us explore the technical
definition of a category enriched over <span class="math inline">\mathcal{V}</span>. Formally, our
fixed <span class="math inline">\mathcal{C}</span> consists of:</p>
<ul>
<li>A collection of objects <span class="math inline">\mathrm{ob}\, \mathcal{C}</span>.</li>
<li>For <span class="math inline">x, y \in \mathcal{C}</span>, a hom-object
<span class="math inline">\mathcal{C}(x, y) \in \mathcal{V}</span>.</li>
<li>For <span class="math inline">x, y, z \in \mathcal{C}</span>, a composition map in <span class="math inline">\mathcal{V}</span>:
<span class="math display">
  \circ_{x, y, z} \colon \mathcal{C}(y, z) \otimes \mathcal{C}(x, y)
                  \longrightarrow \mathcal{C}(x, z).
</span></li>
<li>For <span class="math inline">x \in \mathcal{C}</span> an identities map
<span class="math inline">e_x \colon 1 \longrightarrow \mathcal{C}(x,x)</span>.</li>
</ul>
<p>Further, this data has to satisfy appropriate associativity and
unitality conditions:</p>
<p><img class="pure-img" src="../images/weighted-colimits/enriched.png" alt="axioms for an enriched category"></p>
<p>In the above diagrams, <span class="math inline">\alpha</span>, <span class="math inline">\lambda</span>, and <span class="math inline">\rho</span> respectively
denote the associativity, left, and right unitality constraints of
<span class="math inline">\mathcal{V}</span>.</p>
<p>If these diagrams remind you of a <a href="https://ncatlab.org/nlab/show/monoidal+category">monoidal
category</a>, they absolutely should! Much like
you can think of ordinary categories as multi-object monoids, a decent
mental model for <span class="math inline">\mathcal{V}</span>-categories is to think of them as
multi-object monoidal categories.</p>
<h3 id="functors-and-natural-transformations">Functors and natural transformations</h3>
<p>We furthermore need analogues for functors and natural
transformations—they now also come with a <span class="math inline">\mathcal{V}</span>- prefix. The
functor laws get a bit more complicated, as we need to draw commutative
diagrams and can’t simply express this property in an equation like <span class="math inline">F(f
\circ g) = Ff \circ Fg</span> anymore—remember that we can’t talk about
individual arrows. However, most of the intuition one already has about
functors and natural transformations should carry over just fine. I
will leave the technical definitions of enriched functors and natural
transformations as exercises to the reader; they are relatively
straightforward to write down and not all that important for what
follows.</p>
<p>Thinking further, the upshot one will arrive at is that, in order to do
enriched category theory, we not only need analogues for functors and
natural transformations, but also for all the other basic notions of
ordinary category theory. Since limits and colimits are among the most
important constructions, people naturally started to think about how one
could express them in the enriched language—this is precisely what lead
to the development of weighted colimits!</p>
<p>One interesting thing I want to highlight about enriched functors of the
form <span class="math inline">\mathcal{C} \longrightarrow \mathcal{V}</span> is the induced arrow on
morphisms that they always come with; namely, such a functor <span class="math inline">F</span> induces
an assignment <span class="math inline">\mathcal{C}(a, b) \longrightarrow \mathcal{V}(F a, F b)</span>.
Because <span class="math inline">\mathcal{V}</span> is symmetric monoidal, we can use its tensor–hom
adjunction and rewrite the above to look more like an action:</p>
<p><span class="math display">
  \mathcal{C}(a, b) \otimes F a \longrightarrow F b.
</span></p>
<p>Likewise, a <span class="math inline">\mathcal{V}</span>-functor <span class="math inline">F \colon \mathcal{C}^{\mathrm{op}}
\longrightarrow \mathcal{V}</span> is equipped with an action from the other
side:</p>
<p><span class="math display">
  F b \otimes \mathcal{C}(a, b) \longrightarrow F a.
</span></p>
<p>This already frames functors as little more than generalised modules,
and we will explore this connection in more detail later on.</p>
<h2 id="copowers">Copowers</h2>
<p>One more important technical detail has to be covered before we get to
the fun stuff: copowers. The basic idea is that in any
ordinary—non-enriched—closed monoidal category <span class="math inline">(\mathcal{A},
\otimes_{\mathcal{A}}, 1_{\mathcal{A}})</span>, we have the tensor–hom
adjunction (also called <em>currying</em>) <span class="math inline">{-} \otimes b \,\dashv\, [b, {-}]</span>.
More explicitly, this means that there is a natural isomorphism</p>
<p><span class="math display">
  \mathcal{A}(a \otimes_{\mathcal{A}} b, c) \cong \mathcal{A}(a, [b, c]),
  \qquad \text{for } a, b, c \in \mathcal{A}.
</span></p>
<p>If we’re in an enriched setting, we want to somehow replace the tensor
product of the monoidal category with some action, say <span class="math inline">\cdot \colon
\mathcal{C} \times \mathcal{V} \longrightarrow \mathcal{C}</span>, while
retaining an analogue of the above isomorphism. As such, the <em>copower</em>
of <span class="math inline">c \in \mathcal{C}</span> <em>by</em> <span class="math inline">v \in \mathcal{V}</span> is an object <span class="math inline">c \cdot v
\in \mathcal{C}</span>, such that for all <span class="math inline">b \in \mathcal{C}</span>, there is a
natural isomorphism</p>
<p><span class="math display">
  \mathcal{C}(c \cdot v, b) \cong \mathcal{V}(v, \mathcal{C}(c, b)).
</span></p>
<p>Above I have slightly abused notation; <span class="math inline">\mathcal{V}({-}, {-})</span> now
denotes the <em>internal</em> hom of <span class="math inline">\mathcal{V}</span>, instead of the external
one.<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a> If <span class="math inline">\mathcal{V}</span> is clear from the context, one also often writes
<span class="math inline">[{-},{-}]</span>.</p>
<p>The best thing about copowers is their existence when it comes to
<span class="math inline">\mathsf{Set}</span> and ordinary categories. If <span class="math inline">\mathcal{A}</span> has
coproducts, there is a canonical copower <span class="math inline">\cdot \colon \mathsf{Set}
\times \mathcal{A} \longrightarrow \mathcal{A}</span>.<a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a> For all <span class="math inline">X \in
\mathsf{Set}</span> and <span class="math inline">a \in \mathcal{A}</span>, it is given by</p>
<p><span class="math display">
  X \cdot a ≔     \coprod_{x \in X} 1_{\mathcal{A}} \otimes_{\mathcal{A}} a
            \cong \coprod_{x \in X} a.
</span></p>
<p>The fact that this is a copower follows from</p>
<p><span class="math display">
  \mathcal{A}(X \cdot a, b) = \mathcal{A}\left(\coprod_{x \in X} a, b\right)
  \cong \prod_{x \in X} \mathcal{A}(a, b) \cong \mathsf{Set}(X, \mathcal{A}(a, b)),
</span></p>
<p>for all <span class="math inline">b \in \mathcal{A}</span>. Because of their closeness to the tensor
product, people sometimes call copowers “tensors” and write them with
the same symbol as they write the tensor product.</p>
<h2 id="weighted-colimits">Weighted colimits</h2>
<p>Onto the main dish. The key idea is to reframe an ordinary colimit in
terms of “looking like a monoidal product”. The weighted colimit then
becomes something akin to the tensor product over a k-algebra <span class="math inline">R</span>. We
like rings and modules, so let’s explore this further.</p>
<p>To recap, when looking at bimodules <span class="math inline">A</span> and <span class="math inline">B</span> over some <span class="math inline">k</span>-algebra
(ring) <span class="math inline">R</span> we can define the tensor product of <span class="math inline">A</span> and <span class="math inline">B</span> over <span class="math inline">R</span>, in
symbols <span class="math inline">A \otimes_R B</span>, as the coequaliser</p>
<p><span class="math display">
  A \otimes_R B
  ≔ \mathrm{coeq} \left(
      A \otimes R \otimes B \rightrightarrows A \otimes B
    \right),
</span></p>
<p>where the two parallel arrows are induced by the left and right actions
<span class="math inline">\rhd \colon A \otimes R \longrightarrow A</span> and <span class="math inline">\lhd \colon R \otimes B
\longrightarrow B</span>, respectively.</p>
<p>For ease of notation, I will often write coequalisers like the above one
as</p>
<p><span class="math display">
  A \otimes R \otimes B \rightrightarrows A \otimes   B
                        \longrightarrow   A \otimes_R B.
                                                            \tag{1}
</span></p>
<p>Categorifying this notion, the ring <span class="math inline">R</span> can be seen as a one-object
category enriched over <span class="math inline">\mathsf{Ab}</span> with object <span class="math inline">1</span>. The
multiplication is recovered as function composition in <span class="math inline">R(1, 1)</span>, and
addition is given by the abelian structure. A right <span class="math inline">R</span>-module <span class="math inline">A</span> is
then an enriched functor <span class="math inline">A \colon R^{\mathrm{op}} \longrightarrow
\mathsf{Ab}</span> and similarly a left R-module is an enriched functor <span class="math inline">B
\colon R \longrightarrow \mathsf{Ab}</span>. Inserting the definition
discussed above, we have that <span class="math inline">A</span> consists of a single object <span class="math inline">A1</span> and a
single arrow <span class="math inline">A1 \otimes R(1, 1) \longrightarrow A1</span>. Likewise, we
obtain <span class="math inline">B1</span> and <span class="math inline">R(1,1) \otimes B1 \longrightarrow B1</span> in <span class="math inline">\mathcal{V}</span>.
Thus, we have induced maps</p>
<p><span class="math display">
    A1 \otimes R(1,1) \otimes B1 \rightrightarrows A1 \otimes B1.
</span></p>
<p>Let us forget about enrichment for a while and just study ordinary
categories now. The second observation we need is the well-known fact
that any colimit can be represented as a coequaliser. Suppose
<span class="math inline">\mathcal{D}</span> to be a cocomplete category . Given a functor <span class="math inline">F \colon
\mathcal{J} \longrightarrow \mathcal{D}</span> we can express its colimit as</p>
<p><span class="math display">
  \coprod_{a, b \in \mathcal{J}}
            \coprod_{f \in \mathcal{J}(a, b)} F a
  \rightrightarrows \coprod_{b \in \mathcal{J}} F b
  \longrightarrow   \mathrm{colim}_\mathcal{J} F.
</span></p>
<p>Note that we can use what we learned about (<span class="math inline">\mathsf{Set}</span>-valued)
copowers above and write <span class="math inline">\coprod_{f \in \mathcal{J}(a, b)} F a</span> as
<span class="math inline">\mathcal{J}(a, b) \cdot F a</span>, or even <span class="math inline">\mathcal{J}(a, b) \times F a</span>,
as <span class="math inline">\mathcal{J}(a,b)</span> is a set in this case. Behold:</p>
<p><span class="math display">
  \coprod_{a, b \in \mathcal{J}} \mathcal{J}(a,b) \times F a
  \rightrightarrows \coprod_{b \in \mathcal{J}} F b
  \longrightarrow \mathrm{colim}_\mathcal{J} F.
                                                                \tag{2}
</span></p>
<p>What’s left is to define the two parallel arrows.<a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a></p>
<ol type="1">
<li><p>One arrow is induced by the “projection” <span class="math inline">\pi_2 \colon
\mathcal{J}(a, b) \times F a \longrightarrow F a</span>. Note that
<span class="math inline">\mathcal{J}(a, b) \times F a</span> is really a copower, so the
existence of such an arrow is not immediately clear. Starting with
the unique map <span class="math inline">! \colon \mathcal{J}(a, b) \longrightarrow
\{\star\}</span> to the terminal object, we apply it to the functor <span class="math inline">{-}
\times F j \colon \mathsf{Set} \longrightarrow \mathcal{C}</span>, in
order to obtain</p>
<p><span class="math display">
\pi_2 \!≔\; ! \times F a \colon \mathcal{J}(a,b) \times F a \longrightarrow \{\star\} \times F a \cong F a.
</span></p></li>
<li><p>The other arrow is induced by a collection of actions of
<span class="math inline">\mathcal{J}</span> on <span class="math inline">F</span>, indexed by arrows <span class="math inline">f \colon a \longrightarrow
b</span> in <span class="math inline">\mathcal{J}</span>; i.e.,</p>
<p><span class="math display">
  \begin{aligned}
    (\mathcal{J}(a,b) \times F a \longrightarrow F b)
    &amp;= \left( \coprod_{f \in \mathcal{J}(a,b)} F a \longrightarrow F b \right) \\
    &amp;= \langle Ff \colon Fa \longrightarrow F b \rangle_{f \in \mathcal{J}(a,b)}.
  \end{aligned}
</span></p></li>
</ol>
<p>So that’s the story with expressing colimits as coequalisers. We now
need to completely reframe this in terms of actions. For the second
arrow we are already done: <span class="math inline">F</span> can be seen as a left
<span class="math inline">\mathcal{J}</span>-module.</p>
<p>Using the symmetry of the Cartesian product <span class="math inline">\times</span> of sets, the arrow
<span class="math inline">\mathcal{J}(a, b) \longrightarrow \{\star\}</span> can be reinterpreted as
the components of a right action of <span class="math inline">\mathcal{J}</span> on the terminal
functor <span class="math inline">\mathbb{T} \colon \mathcal{J} \longrightarrow \mathsf{Set}</span>
that sends every object to the one-element set <span class="math inline">\{\star\}</span>:</p>
<p><span class="math display">
  (\mathbb{T}b \times \mathcal{J}(a,b) \longrightarrow \mathbb{T}a)
  =     (\{\star \} \times \mathcal{J}(a,b) \longrightarrow \{\star\})
  \cong (\mathcal{J}(a,b) \longrightarrow \{\star\}).
</span></p>
<p>Putting these two observations together, we really have two induced
arrows, each with type signature</p>
<p><span class="math display">
  \mathbb{T} b \times \mathcal{J}(a, b) \times F a \longrightarrow \mathbb{T} a \times F a.
</span></p>
<p>Inserting these into Equation <span class="math inline">(2)</span>, this yields</p>
<p><span class="math display">
  \coprod_{a, b \in \mathcal{J}} \mathcal{J}(a,b) \times F a
    \cong             \coprod_{a, b \in \mathcal{J}} \mathbb{T} b \times \mathcal{J}(a, b) \times F a
    \rightrightarrows \coprod_{a \in \mathcal{J}} \mathbb{T} a \times F a
    \cong             \coprod_{a \in \mathcal{J}} F a.
</span></p>
<p>This is exactly the way the tensor product of bimodules is defined in
Equation <span class="math inline">(1)</span>, hence it is tempting to write the resulting coequaliser
as <span class="math inline">\mathbb{T} \otimes_{\mathcal{J}} F</span>. As such, a colimit of a
functor <span class="math inline">F</span> over <span class="math inline">\mathcal{J}</span> can be seen as a tensor product of
functors with the terminal functor. Now, the terminal functor is not
very interesting—what if we replace it with something more complicated?
Well, that’s exactly the point where weighted colimits come into play!
Using a <em>weight</em> <span class="math inline">W</span> instead of <span class="math inline">\mathbb{T}</span>, we would end up with
something like</p>
<p><span class="math display">
  \coprod_{a, b \in \mathcal{J}} W b \times \mathcal{J}(a, b) \times F a \rightrightarrows \coprod_{a \in \mathcal{J}} W a \times F a \longrightarrow W \otimes_{\mathcal{J}} F.
</span></p>
<p>Because this looks like a tensor product—and it’s universal, due to it
being a colimit—it should also support some form of currying: given an
arrow <span class="math inline">W \otimes_{\mathcal{J}} F \longrightarrow c</span>, for an object <span class="math inline">c
\in \mathcal{C}</span>, we should be able to obtain a map <span class="math inline">W \Longrightarrow
\mathcal{C}(F, c)</span>. Now’s your time to guess what exactly a weighted
colimit will be!</p>
<h3 id="definition">Definition</h3>
<p>Still in the non-enriched setting, let me now give you the formal
definition of a weighted colimit. Suppose <span class="math inline">\mathcal{J}</span> to be a small
category. Let <span class="math inline">W \colon \mathcal{J}^{\mathrm{op}} \longrightarrow
\mathsf{Set}</span> be a presheaf—the <em>weight</em>—and suppose we have a functor
<span class="math inline">F \colon \mathcal{J} \longrightarrow \mathcal{A}</span>. The <em><span class="math inline">W</span>-weighted
colimit of <span class="math inline">F</span></em> comprises an object <span class="math inline">W \otimes_{\mathcal{J}} F \in
\mathcal{A}</span>, equipped with a natural (in <span class="math inline">a \in \mathcal{A}</span>)
isomorphism</p>
<p><span class="math display">
  \mathcal{A}(W \otimes_{\mathcal{J}} F, a)
  \cong
  [\mathcal{J}^{\mathrm{op}}, \mathsf{Set}] (W, \mathcal{A}(F, a)).
</span></p>
<p>Note that, by the <a href="https://ncatlab.org/nlab/show/Yoneda+lemma">Yoneda lemma</a>, the above isomorphism is
uniquely determined by a natural transformation <span class="math inline">W \Longrightarrow
\mathcal{A}(F, W \otimes_{\mathcal{J}} F)</span>, induced by the identity on
<span class="math inline">W \otimes_{\mathcal{J}} F</span>. As promised, this is exactly the
representation we arrived at above.</p>
<p>A pair of an object <span class="math inline">c \in \mathcal{A}</span> and a natural transformation <span class="math inline">W
\Longrightarrow \mathcal{A}(F, c)</span> on their own; i.e., without the
universal property, is what one would normally call a <em><span class="math inline">W</span>-weighted
cocone</em>.</p>
<h3 id="enriched-weighted-colimits">Enriched weighted colimits</h3>
<p>The enriched definition is now exactly the same! If <span class="math inline">\mathcal{J}</span> is a
small <span class="math inline">\mathcal{V}</span>-category and we have <span class="math inline">\mathcal{V}</span>-functors <span class="math inline">F
\colon \mathcal{J} \longrightarrow \mathcal{C}</span> and <span class="math inline">W \colon
\mathcal{J}^{\mathrm{op}} \longrightarrow \mathcal{V}</span>, then we can
define the <em><span class="math inline">W</span>-weighted colimit of <span class="math inline">F</span></em> as an object <span class="math inline">W
\otimes_{\mathcal{J}} F \in \mathcal{C}</span>, equipped with a
<span class="math inline">\mathcal{V}</span>-natural (in <span class="math inline">c \in \mathcal{C}</span>) isomorphism</p>
<p><span class="math display">
  \mathcal{C}(W \otimes_{\mathcal{J}} F, c)
  \cong
  [\mathcal{J}^{\mathrm{op}}, \mathcal{V}] (W {-}, \mathcal{C}(F {-}, c)).
</span></p>
<p>This is the power of the formalism we developed—the definition extends
in a straightforward way to the enriched setting. This may now be used
to great effect: among other things weighted colimits can be used to
define the right notion of enriched coend.</p>
<h3 id="examples">Examples</h3>
<p>It’s probably about time for some examples. For the first two, let us
focus on cocones only; not thinking about the universal property at
first is perhaps a little easier to understand—at least it was for me.
I learned these from Richard Garner during <a href="https://conferences.leeds.ac.uk/bcqt2022/">BCQT 2022</a>.</p>
<ol type="1">
<li><p>Let our diagram category have two objects and one non-trivial
morphism; i.e., <span class="math inline">\mathcal{J} ≔ \{ \varphi \colon a \longrightarrow b
\}</span>. Further, assume that the weight <span class="math inline">W</span> picks out<a href="#fn6" class="footnote-ref" id="fnref6" role="doc-noteref"><sup>6</sup></a> the unique
arrow <span class="math inline">\{ 0, 1 \} \longrightarrow \{ 1 \}</span> in <span class="math inline">\mathsf{Set}</span>.
Suppose that the functor <span class="math inline">F \colon \mathcal{J} \longrightarrow
\mathcal{C}</span> sends <span class="math inline">a, b \in \mathcal{J}</span> to <span class="math inline">x, y \in \mathcal{C}</span>
and <span class="math inline">\varphi</span> to <span class="math inline">\theta \colon x \longrightarrow y</span>.</p>
<p>Again by the Yoneda lemma we have that a cocone is given by a natural
transformation <span class="math inline">W \Longrightarrow \mathcal{C}(F, c)</span>. In this
restricted setting, an arrow <span class="math inline">Wa \longrightarrow \mathcal{A}(Fb, c)</span>
just picks out two morphisms. Thus, the whole thing amounts to the
commutativity of the following diagram:</p>
<div style="text-align:center;">
<p><img class="pure-img" src="../images/weighted-colimits/example-1.png" alt="necessary commutative diagram"></p>
</div>
<p>In more plain language, the following equation must hold:</p>
<p><span class="math display">
  (x \xrightarrow{\;\;\theta\;\;} y \xrightarrow{\;\;g\;\;} c)
  = (x \xrightarrow{\;\;\theta\;\;} y \xrightarrow{\;\;f\;\;} c).
</span></p></li>
<li><p>A slightly more complicated example is the following. Assume again
that <span class="math inline">\mathcal{J} = \{ \varphi \colon a \longrightarrow b \}</span> as
above, only this time our choice of enrichment is not <span class="math inline">\mathsf{Set}</span>,
but <span class="math inline">\mathsf{Cat}</span>. This means that the weight <span class="math inline">W</span> is now a functor
from <span class="math inline">\mathcal{A}^{\mathrm{op}}</span> to <span class="math inline">\mathsf{Cat}</span>. Suppose it picks
out the arrow</p>
<p><span class="math display">
\{ 0 \;\; 1 \} \hookrightarrow \{ 0 \cong 1 \},
</span></p>
<p>where the source an target are understood to be categories. In this
setting, a weighted cocone becomes something 2-categorical. We still
pick out arrows <span class="math inline">f</span> and <span class="math inline">g</span>, but since the category we are looking at
contains a non-trivial isomorphism, the commutative diagram also
becomes more complicated. Namely, we required the commutativity of</p>
<div style="text-align:center;">
<p><img class="pure-img" src="../images/weighted-colimits/example-2.png" alt="necessary commutative diagram"></p>
</div>
<p>Instead of the requiring <span class="math inline">\theta \circ g</span> to <em>equal</em> <span class="math inline">\theta \circ
f</span>, we now only require the existence of an invertible 2-cell that
mediates between the two.</p></li>
<li><p>A subcategory <span class="math inline">\mathcal{D}</span> of <span class="math inline">\mathcal{E}</span> is said to be <em>dense</em> in
<span class="math inline">\mathcal{E}</span> if we can, in some sense, approximate the objects of
<span class="math inline">\mathcal{E}</span> well enough with objects in <span class="math inline">\mathcal{D}</span><a href="#fn7" class="footnote-ref" id="fnref7" role="doc-noteref"><sup>7</sup></a> (think
of the density of <span class="math inline">\mathbb{Q}</span> inside <span class="math inline">\mathbb{R}</span>). Dense
categories are nice because they often tell us a lot about their
super categories and are sometimes easier to reason about. For
example, the category of finite-dimensional (left-)comodules of any
(possibly infinite-dimen­sio­nal) Hopf algebra is dense
inside the category of all comodules, which makes them much easier to
work with than modules.</p>
<p>Formally, <span class="math inline">\mathcal{D}</span> is dense in <span class="math inline">\mathcal{E}</span> if the restricted
Yoneda embedding along the inclusion functor <span class="math inline">\iota \colon
\mathcal{D} \hookrightarrow \mathcal{E}</span></p>
<p><span class="math display">
  \mathcal{E} \longrightarrow [\mathcal{E}^{\mathrm{op}}, \mathsf{Set}]
    \xrightarrow{\;[\iota, \mathsf{Set}]\;} [\mathcal{D}^{\mathrm{op}}, \mathsf{Set}]
</span></p>
<p>is still fully faithful. Another way of saying this is that every
object <span class="math inline">e \in \mathcal{E}</span> is the <span class="math inline">\mathcal{E}(\iota, e)</span>-weighted
colimit of <span class="math inline">\iota</span>. Indeed, the isomorphism we have for a weighted
colimit specialised to our situation looks like</p>
<p><span class="math display">
 \mathcal{E}(e, a) \cong [\mathcal{D}^{\mathrm{op}}, \mathsf{Set}] (\mathcal{E}(\iota, e), \mathcal{E}(\iota, a)),
</span></p>
<p>for all <span class="math inline">a \in \mathcal{E}</span>, which is exactly what it means for the
above arrow to be fully faithful.</p></li>
</ol>
<p><em>Exercise</em>: Try to find a weight <span class="math inline">W</span> such that a <span class="math inline">W</span>-weighted cocone
recovers the normal, unweighted, notion.</p>
<p><em>Exercise</em>: As you can imagine 1. and 2. can be used to produce all
kinds of relations between <span class="math inline">f</span> and <span class="math inline">g</span>. As such, prove the following
statements:</p>
<ul>
<li><p>A variant of 1.: in the case of the weight being <span class="math inline">\{0, 1\}
\xrightarrow{\;\;\mathrm{id}\;\;} \{0, 1\}</span>, we obtain a
not-necessarily-commutative diagram.</p></li>
<li><p>A variant of 2.: in the case that the weight is <span class="math inline">\{ 0 \}
\hookrightarrow \{ 0 \longrightarrow 1 \}</span> (i.e., we only have an
arrow between 0 and 1 and not necessarily an isomorphism), we get an
ordinary (non-invertible) 2-cell as the weighted cocone.</p></li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>And that’s it! I’ve found this intuition very helpful in trying to wrap
my head around these concepts—hopefully other people will too. As a
parting gift, I leave you with some more things to think about.</p>
<p>First, one of the most important examples of weighted colimits—and
coends, of course—is the <a href="https://ncatlab.org/nlab/show/tensor+product+of+functors">tensor product of
functors</a>. If you ever wanted to be a
<a href="https://ncatlab.org/nlab/show/co-Yoneda+lemma">ninja</a>, now is the time! It’s a fun operation to think
about and play around with, and I would invite you to do just that.</p>
<p>Lastly, the category of weights <span class="math inline">[\mathcal{J}^{\mathrm{op}},
\mathcal{V}]</span> is actually very special: it is the free cocompletion of
<span class="math inline">\mathcal{J}</span>. Every functor <span class="math inline">G \colon \mathcal{J} \longrightarrow
\mathcal{A}</span> extends uniquely (up to unique isomorphism) to a
cocontinuous functor <span class="math inline">[\mathcal{J}^{\mathrm{op}}, \mathcal{V}]</span> to
<span class="math inline">\mathcal{A}</span> by the assignment <span class="math inline">W \mapsto W \otimes_{\mathcal{J}} G</span>;
note the tensor product of functors!.</p>
<h2 id="resources">(Re)sources</h2>
<ul>
<li><p>Monoidal Category Theory:</p>
<ul>
<li><p>Saunders Mac Lane: “Natural associativity and commutativity”.
In: Rice Univ. Stud. 49.4 (1963), pp. 28–46. issn: 0035-4996.</p></li>
<li><p>Pavel Etingof, Shlomo Gelaki, Dmitri Nikshych, and Victor Ostrik:
“Tensor categories”. In: Vol. 205. Mathematical Surveys and
Monographs. American Mathematical Society, Providence, RI, 2015,
pp. xvi+343.</p></li>
<li><p><a href="https://ncatlab.org/nlab/show/monoidal+category">nLab: monoidal category</a></p></li>
</ul></li>
<li><p>Enriched Category Theory:</p>
<ul>
<li><p>Max Kelly: “Basic concepts of enriched category theory”. In: London
Math. Soc. Lec. Note Series 64, Cambridge Univ. Press 1982, 245
pp. (ISBN:9780521287029).</p>
<p>Republished as: Reprints in Theory and Applications of Categories,
No. 10 (2005) pp. 1-136 (<a href="http://www.tac.mta.ca/tac/reprints/articles/10/tr10abs.html">link</a>)</p></li>
<li><p><a href="https://ncatlab.org/nlab/show/enriched+category">nLab: enriched category</a></p></li>
</ul></li>
<li><p>Copowers:</p>
<ul>
<li><a href="https://ncatlab.org/nlab/show/copower">nlab: copower</a></li>
</ul></li>
<li><p>Weighted Colimits:</p>
<ul>
<li><p><a href="https://golem.ph.utexas.edu/category/2007/02/day_on_rcfts.html#c007723">Todd Trimble on the n-Category Café</a></p></li>
<li><p><a href="https://golem.ph.utexas.edu/category/2007/02/day_on_rcfts.html#c007688">John Baez on the n-Category Café</a></p></li>
<li><p><a href="https://ncatlab.org/nlab/show/weighted+colimit">nLab: weighted colimit</a></p></li>
<li><p>Richard Garner: Bicategories; lecture series at <a href="https://conferences.leeds.ac.uk/bcqt2022/">BCQT 2022, Leeds</a>.</p></li>
<li><p>Emily Riehl: “Weighted Limits and Colimits”; <a href="https://math.jhu.edu/~eriehl/weighted.pdf">lecture notes</a>.</p></li>
</ul></li>
</ul>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>This is also sometimes called a <em>cosmos</em>.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>In the strict sense.<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>Do remember that <span class="math inline">\mathcal{C}(a,b)</span> is an object in <span class="math inline">\mathcal{V}</span> now!<a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>If the category <span class="math inline">\mathcal{A}</span> is locally small. I will ignore
those kinds of technicalities for the purposes of this post.<a href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p>I still mostly follow Trimble and the nLab here. A more explicit
description—in the case of limits—is given, for example, in
Riehl’s <a href="https://math.jhu.edu/~eriehl/context.pdf">Category Theory in Context</a>, Theorem 3.2.13.<a href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn6"><p>By sending <span class="math inline">a</span> to <span class="math inline">\{0, 1\}</span>, <span class="math inline">b</span> to <span class="math inline">\{1\}</span>, and <span class="math inline">\varphi</span> to the
arrow <span class="math inline">\{0, 1\} \longrightarrow \{1\}</span>, which exists because
<span class="math inline">\{1\}</span> is the terminal set.<a href="#fnref6" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn7"><p>{-} These things are actually all other the place: for example,
the Yoneda embedding itself is dense if the category is
essentially small. Further, if you like higher category
theory, you will appreciate that the simplex category being
dense in <span class="math inline">\mathsf{Cat}</span> immediately follows from the fact
that the nerve functor from <span class="math inline">\mathsf{Cat}</span> to <span class="math inline">\mathsf{sSet}</span>
is fully faithful.<a href="#fnref7" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
</div>

      <!-- Body is included in the above file -->
    </section>
    
</article>
]]></summary>
</entry>
<entry>
    <title>My PhD Research Workflow</title>
    <link href="https://tony-zorman.com/posts/my-phd-workflow.html" />
    <id>https://tony-zorman.com/posts/my-phd-workflow.html</id>
    <published>2022-05-01T00:00:00Z</published>
    <updated>2022-05-01T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
    <p class="header">
      
        Posted on 2022-05-01
      
      
        &thinsp;·&thinsp; last modified: 2022-05-23
      
      
        &thinsp;·&thinsp; <span title="2284 words">10 min read</span> &thinsp;·&nbsp;
      
      
        <a title="All pages tagged 'emacs'." href="/tags/emacs.html" rel="tag">emacs</a>, <a title="All pages tagged 'maths'." href="/tags/maths.html" rel="tag">maths</a>, <a title="All pages tagged 'xmonad'." href="/tags/xmonad.html" rel="tag">xmonad</a>
      
    </p>
    <section>
      <!-- A table of contents inline in the text, in case the screen is
           too small for the one in the `default.html' template -->
      <!-- A table of contents inline in the text, in case the screen is too
     small for the one in the `default.html' template -->

  

<div>
  <p>After reading <a href="https://castel.dev/post/research-workflow/">Gilles Castel</a>’s excellent blog post about his research
workflow, I decided that it was as good a time as any to write about
mine—deeming it novel enough to hopefully contribute something to the
discussion.</p>
<p>Just like Castel, I’m a new PhD student in mathematics, which means no
lab work and—in my case—no code. Just you and your inability to
understand basic concepts. As such, I often scribble things down on
paper or a blackboard first and, when sufficiently convinced that the
information is worth keeping around, type it up. Typesetting something
is a surprisingly effective way to catch errors in handwritten
manuscripts!</p>
<p>As basically my entire digital life happens in either <a href="https://www.gnu.org/software/emacs/">Emacs</a> or
<a href="https://xmonad.org/">XMonad</a>, my setup is heavily skewed in that direction; I will make use
of these tools almost every step of the way.
<!--more-->
As such, there is a lot of tangential almost relevant bits that I could
cover here. However, since these aren’t directly related to my
<em>research</em> workflow—and there is a lot of great resources out there
already—I decided to not do this here.<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a></p>
<h2 id="high-level-structure">High level structure</h2>
<h3 id="topics">Topics</h3>
<p>XMonad has a module called <a href="https://hackage.haskell.org/package/xmonad-contrib/docs/XMonad-Actions-TopicSpace.html">TopicSpace</a>, which upgrades the X11
workspace—virtual desktop—concept to so-called topics. These are
workspaces with a “theme” associated to them; for example, I have a
topic for every project that I’m currently working on. This results in
a clean separation of concerns. Plus, I always know where my windows
are!</p>
<p>Every topic has a directory and a “startup hook”, firing when the topic
is switched to and empty, associated to it. While most convenient for
programming related tasks—e.g., spawn <code>ghcid</code> in the relevant directory
or automatically build and open this website—it’s also quite convenient
for mathematical projects.</p>
<p>I have set up special keybindings to bring up an Emacs session in the
topic directory, or spawn a terminal there. Switching to topics is done
fuzzily via the XMonad prompt, which means I only have to type a few
characters to get to my destination. This makes it feasible to have 30
topics, instead of the usual 9 or so, in the first place. As a result,
it’s rather fast to go from thinking about a certain problem to working
on it. When I’m already inside a project, I leverage Emacs’s built-in
<code>project.el</code> library to search through files and the like.</p>
<p><img class="pure-img" src="../images/phd-workflow/topics.gif" alt="Navigation example"></p>
<h3 id="files">Files</h3>
<p>Here I keep things relatively simple; I have a big “library” directory
in which essentially all books or papers that I’ve ever read reside.
This may sound a bit chaotic, but since I never interact with this
as-a-directory it is actually the easiest and cleanest solution for me.</p>
<p>To keep a bit of order, all files are named in a consistent and
descriptive way: <code>authors_title.pdf</code>, where <code>authors</code> is a list of last
names of all authors separated by hyphens and <code>title</code> is the title of
the work, also separated by hyphens. For example:</p>
<pre><code>    pastro-street_double-of-a-monoidal-category.pdf</code></pre>
<p>Also in this directory are <code>.xopp</code> files, when I scribble on the
relevant PDFs in <a href="https://xournalpp.github.io/">xournalpp</a>; more on that later.</p>
<p>Instead of navigating to it, all interaction with the library is done
via <a href="https://github.com/slotthe/hmenu">hmenu</a>, a small wrapper around <a href="https://tools.suckless.org/dmenu/">dmenu</a> to facilitate this kind of
behaviour. I merely have to press <code>M-y</code><a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a> and can then fuzzy search
through the directory. Once I’ve made a choice, PDFs are automatically
opened in <a href="https://pwmt.org/projects/zathura/">zathura</a> and <code>.xopp</code> files are opened in xournalpp.</p>
<p><img class="pure-img" src="../images/phd-workflow/hmenu.gif" alt="example hmenu usage"></p>
<p>My bibliography is organised in a similar spirit; see
<a href="#citations">Citations</a>.</p>
<h2 id="note-taking">Note taking</h2>
<h3 id="handwritten-notes">Handwritten notes</h3>
<p>For handwritten notes I… use real paper! A little elaboration is
probably in order, having talked about <code>.xopp</code> files and xournalpp
above. I do have a Wacom tablet lying around and I’m quite happy
annotating PDFs with it. In lieu of printing everything out, this
alleviates a little bit of the usual pain with reading papers, like
coming back to one three weeks later and getting stuck on the same
calculation as last time. I do love those annotations!</p>
<p>However, there is just something deeply psychologically pleasing about
ordinary pen and paper—nothing beats drawing up the first version of
many ideas there. It’s a very “pure” experience: there’s no noise or
distractions, nothing that could break, no additional layer of
abstraction between you and the maths. Chalkboards—but not whiteboards,
with their ever empty markers—fall into this category as well,
especially when collaborating with others.</p>
<p>Not without my quirks (as I’m sure you’ve noticed), I’m a bit picky
about the particular writing setup. It’s either completely white A5<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a>
paper, paired with a good (mechanical) pencil/a fine pen, or thick
dotted paper, paired with a fountain pen.</p>
<p>Quite enjoying the experience, I tend to write quite a lot of
manuscripts by hand first. Of course, anything that’s supposed to be
permanent should be typed up properly!</p>
<h3 id="digital-notes">Digital notes</h3>
<p>Not wanting to go insane, I use LaTeX for all of my digital note taking.
My writing setup for <code>.tex</code> files is pretty similar to <a href="https://karthinks.com/software/latex-input-for-impatient-scholars/">Karthik
Chikmagalur</a>’s—whose excellent post you should definitely check out—so I
will not belabour the point too much here. The tl;dr is <a href="https://www.gnu.org/software/auctex/">AUCTeX</a>,
<a href="https://github.com/cdominik/cdlatex">CDLaTeX</a>, and <a href="https://github.com/ymarco/auto-activating-snippets">aas</a>.</p>
<p><img class="pure-img" src="../images/phd-workflow/input.gif" alt="LaTeX input example"></p>
<p>In case you’re not used to <code>prettify-symbols-mode</code>: the inserted LaTeX
code was</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode tex"><code class="sourceCode latex"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">\begin</span>{<span class="ex">definition</span>} <span class="kw">\label</span>{<span class="ex">def:day-convolution</span>}</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  The <span class="fu">\emph</span>{Day convolution} of two functors <span class="ss">$F$</span> and <span class="ss">$G$</span> is</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  <span class="ss">\[</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="ss">    F * G </span><span class="sc">\defeq</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="ss">      </span><span class="sc">\int</span><span class="ss">^{C,D </span><span class="sc">\in</span><span class="ss"> </span><span class="sc">\cc</span><span class="ss">} </span><span class="sc">\cc</span><span class="ss">(C </span><span class="sc">\otimes</span><span class="ss"> D, </span><span class="sc">\blank</span><span class="ss">) </span><span class="sc">\otimes</span><span class="ss"> FC </span><span class="sc">\otimes</span><span class="ss"> GD.</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="ss">  \]</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>{<span class="ex">definition</span>}</span></code></pre></div>
<p>I do use some smaller packages not mentioned in Chikmagalur’s article,
like <a href="https://github.com/oantolin/math-delimiters">math-delimiters</a> and <a href="https://github.com/slotthe/change-env">latex-change-env</a>. The former is for
quickly changing between inline and display math, complete with slurping
punctuation symbols into display math and barfing them out of inline
math. For example, “<code>$1 + 1$.</code>” becomes “<code>\[1 + 1.\]</code>” (with line
breaks) and back.</p>
<p>The <code>latex-change-env</code> package is for changing between different kinds
of environments, including display math, while offering to rename labels
across the project if necessary. When deleting a label from an
environment, it also remembers this for the session!<a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a></p>
<p><img class="pure-img" src="../images/phd-workflow/label-renaming.gif" alt="latex-change-env showcase"></p>
<p>One neat feature of AUCTeX that I find myself using more and more often
lately is the in-buffer preview.<a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a> Usually when writing a draft I’m
not that interested in how exactly something looks in the PDF—that part
comes later, believe me. In cases like these, just calling
<code>preview-buffer</code> is quite convenient and lets me use the screen real
estate that a PDF viewer would have taken up for something else.</p>
<p><img class="pure-img" src="../images/phd-workflow/preview.gif" alt="latex-preview showcase"></p>
<p>I always use pure LaTeX for writing papers, drafts, or presentations.
However, I also take lots of notes in <a href="https://orgmode.org/">org-mode</a>, which, as a crude
first approximation, is something like a markup language that’s <em>very</em>
well integrated into Emacs.</p>
<p>For the actual note-taking, I use the venerable <a href="https://www.orgroam.com/">org-roam</a>—a free
software alternative to the proprietary Roam Research program—to jot
down things that I’d like to remember for more than three days.
Org-roam describes itself as a “plain-text personal knowledge management
system”, which fits the bill pretty well. In short, it’s a note taking
system in the spirit of the <a href="https://en.wikipedia.org/wiki/zettelkasten">Zettelkasten</a> method, which is essentially
about having lots of notes with lots of backlinks to related concepts:</p>
<p><img class="pure-img" src="../images/phd-workflow/backlinks.png" alt="org-roam showcase"></p>
<p>In fact, using <a href="https://github.com/org-roam/org-roam-ui">org-roam-ui</a>, one can even visualise the entire
Zettelkasten as an interactive and pretty graph in which notes become
nodes and backlinks become edges!</p>
<div class="pure-g">
<div class="pure-u-1-2">
<img class="pure-img" src="../images/phd-workflow/org-roam-ui-close.png" alt="org-roam-ui example zoomed-in">
</div>
<div class="pure-u-1-2">
<img class="pure-img" src="../images/phd-workflow/org-roam-ui-far.png" alt="org-roam-ui example zoomed-out">
</div>
</div>
<p>Org-roam <a href="https://github.com/org-roam/org-roam#configuration">suggests
keybindings</a> for all
of the most important concepts: creating notes, inserting them, showing
all of the backlinks of a file, etc. An important extra that I’ve added
is having two “types” of notes: <code>reference</code>s, where things that I
learned but are otherwise known reside, and <code>novel</code>s, where I put my own
ideas.</p>
<p>As I’m predisposed to quite easily forget details, I regularly engage
with my Zettelkasten, so as to keep things fresh in my mind. Reading
through all of the notes that are relevant to what I’m currently working
on, creating new backlinks, filling in gaps, even deleting old
information and re-organising some local region of the graph. Indeed, I
tag every new entry as a <code>draft</code> until further notice, forcing me to go
back there especially. This results in pretty good recollection of the
most important facts, even with my brain.</p>
<h2 id="staying-up-to-date">Staying up to date</h2>
<p>I use <a href="https://github.com/skeeto/elfeed">elfeed</a> to query the <a href="https://arxiv.org/">arXiv</a> for new preprints that are of
interest to me. Thankfully, the fields I’m subscribed to tend to be
moving slow-ish and so I can manage to at least read the abstract of
every paper that pops up in my feed. There is also <a href="https://gitlab.com/slotThe/dotfiles/-/blob/afa8fd39cea2647152038e3f4dd42f1dbd66c413/emacs/.config/emacs/lisp/rss.el#L61">a little bit of
elisp</a>
involved to print arXiv entries in a more readable way than the default
formatting.</p>
<p>When the abstract interests me, I usually directly download the paper
into my library and open it with zathura. This is fully automated via
<a href="https://github.com/slotthe/arxiv-citation">arxiv-citation</a>—more on that later. I merely have to press <code>C-c d</code>
while looking at a paper and magic happens!</p>
<p><img class="pure-img" src="../images/phd-workflow/elfeed.gif" alt="elfeed showcase"></p>
<p>In the above gif, on the right-hand side you can see a score associated
to each entry. While reading every abstract has worked quite well for
me thus far, it’s nice to get the papers that are “probably interesting”
high up, so that I’m more likely to notice them sooner rather than
later. I use <a href="https://github.com/sp1ff/elfeed-score">elfeed-score</a> for this, which integrates seamlessly into
the rest of the machinery. It compares certain features of the entry
(like the title and abstract) with a list of regular expressions,
increasing the total score of the entry every time it matches something.</p>
<p>Speaking of the arXiv, in XMonad I have bound <code>M-s a</code> to look up the
given string there. Likewise, <a href="https://zbmath.org/">zbmath</a> is searched with <code>M-s z</code>. When
these commands get a “universal argument”—an Emacs concept that XMonad
borrowed—they automatically start a search with the current selection
instead. Briefly, pressing <code>M-u</code> before a command can modify it in
different ways. All of my search commands act on the <a href="https://www.jwz.org/doc/x-cut-and-paste.html">primary
selection</a> when given such an argument; <code>M-u M-s &lt;letter&gt;</code> will look up
the currently selected text on the relevant “search engine”. One
instance where this is useful is for quickly switching between the arXiv
and zbmath:</p>
<p><img class="pure-img" src="../images/phd-workflow/selected-search.gif" alt="XMonad.Actions.Search showcase"></p>
<h3 id="citations">Citations</h3>
<p>For citation management, I use a very simple system—no Zotero, JabRef,
or similar technology. Concretely, this means that I have a blessed
bibliography file somewhere within my home directory and I either
symlink (when I’m writing something alone) or copy (when working with at
least one coauthor) the file into the relevant project directory. In
case of a copy operation, I only have to update a single variable in
Emacs (<code>arxiv-citation-bibtex-files</code>), which is good enough for me and
doesn’t seem to warrant a slightly more automated, yet probably much
more complicated solution.</p>
<p>Adding new citations is done via the now aptly named Emacs package
<a href="https://github.com/slotthe/arxiv-citation">arxiv-citation</a><a href="#fn6" class="footnote-ref" id="fnref6" role="doc-noteref"><sup>6</sup></a> with <a href="https://gitlab.com/slotThe/dotfiles/-/blob/afa8fd39cea2647152038e3f4dd42f1dbd66c413/xmonad/.config/xmonad/src/xmonad.hs#L576">a bit of
plumbing</a>
on the XMonad side to get Emacs going. The basic idea is that—given an
arXiv or zbmath link—we first look up the paper on zbmath to see if it
was published and, if not, just use the arXiv data to construct our own
bibliography entry instead. By default, my keybinding for this acts on
the primary selection, so I merely have to highlight the link, press
<code>M-o a</code>, sit back, and enjoy the show. The following gif should help
drive home the point, also showcasing the format of a not yet published
paper and a published one.</p>
<p><img class="pure-img" src="../images/phd-workflow/arXiv-citation.gif" alt="arXiv-citation showcase"></p>
<h2 id="final-thoughts">Final thoughts</h2>
<p>And that’s it! If nothing else, this post helped me to nail down some
ideas that I had lying around and got me to finally clean up and publish
many of the extensions talked about here—that’s already a win in my
book.</p>
<p>I’m sure that some details will change over the course of the next three
years as I mature mathematically and my needs change, but overall I feel
pretty comfortable with this setup.</p>
<h5 id="addendum">Addendum</h5>
<p>Thanks to everyone who reached out! I received some inquiries as to my
configurations, so here are the most important bits again, for your
convenience:
<a href="https://gitlab.com/slotThe/dotfiles/-/tree/master/emacs">my Emacs config</a>,
<a href="https://gitlab.com/slotThe/dotfiles/-/tree/master/xmonad">my XMonad config</a>,
<a href="https://www.orgroam.com/">org-roam</a>, <a href="https://github.com/oantolin/math-delimiters">math-delimiters</a>, <a href="https://github.com/slotthe/arxiv-citation">arxiv-citation</a>, <a href="https://github.com/slotthe/change-env">latex-change-env</a>,
<a href="https://github.com/slotthe/hmenu">hmenu</a>.</p>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>If you’d like some examples: being employed at a university also
means I have to worry a bit about efficiently dealing with
bureaucracy (<a href="https://notmuchmail.org/">notmuch.el</a>), keeping some sort of up-to-date
calendar and readable todo-notes (<a href="https://orgmode.org/">org-mode</a> and goodies, as well
as integration via <a href="https://hackage.haskell.org/package/xmonad-contrib/docs/XMonad-Prompt-OrgMode.html">XMonad’s OrgMode prompt</a>), accessing the
universities internal nextcloud server (<a href="https://gitlab.com/hperrey/khalel">khalel</a> and <code>davfs2</code> or
<code>TRAMP</code>), … You get the idea.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>I will be using Emacs style notation throughout the article. This
means that, for example, <code>C-x a</code> should be read as “hold down
control and press x, then release both and press a”. You can of
course safely ignore this, since the keys just serve illustrative
purposes. An important note for Emacs users, lest anyone be
confused: in XMonad, <code>M-</code> usually does <strong>not</strong> refer to the Meta
key, but to the <code>modMask</code> that the user specified. This is indeed
<code>&lt;Alt&gt;</code> by default, but many people understandably rebind this
straight away to something that’s less likely to interfere with
other programs. In my case, that’s the Super key, so <code>M-s</code> means
<code>&lt;Super&gt;-s</code> and not <code>&lt;Alt&gt;-s</code>.<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>Although, admittedly, when drawing up large diagrams I’m sometimes
forced to switch to A4 paper in landscape mode.<a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>This is based on the hash of the contents of the environment—if
that changes, the label is “lost”; though it can of course still
be retrieved manually from the relevant hash map.<a href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p>This is, in part, due to the new <code>pixel-scroll-precision-mode</code> in
Emacs 29, making use of XInput 2.4 functionality. It makes
scrolling through buffers that are quite dense with pictures
rather smooth.<a href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn6"><p>Ostensibly, this should be an XMonad module, as it does not
necessarily have anything to do with Emacs itself. However, I had
already written the elfeed integration and so the most annoying
part (scraping the arXiv xml for certain bits) was already done.
On the other hand, there are more Emacs than XMonad users, so
perhaps doing it like this will help more people anyways.<a href="#fnref6" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
</div>

      <!-- Body is included in the above file -->
    </section>
    
</article>
]]></summary>
</entry>

</feed>
